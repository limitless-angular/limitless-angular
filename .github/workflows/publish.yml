name: publish

on:
  # Run manually using the GitHub UI
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        required: false
        default: ''
  # ...or whenever a GitHub release gets created
  release:
    types: [published]

jobs:
  publish:
    # prevents this action from running on forks
    if: github.repository == 'limitless-angular/limitless-angular'
    name: Publish to npm
    runs-on: ubuntu-latest
    permissions:
      id-token: write # needed for provenance data generation
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # include tags

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js per package.json
        uses: actions/setup-node@v4
        with:
          # Use the .nvmrc file as the source of truth
          node-version-file: .nvmrc
          cache: 'pnpm'
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Set up Git user
        run: |
          git config --global user.name "Alfonso Andrés López Molina"
          git config --global user.email "osnoser_12@hotmail.com"

      - name: Apply updated version to packages
        run: |
          # Use the version from the workflow input if it's set, otherwise use the tag name from the release
          RAW_VERSION=${{ github.event.inputs.version || github.ref_name }}
          # Extract just the version number if it includes a package name (e.g., "sanity@19.0.0" -> "19.0.0")
          VERSION=${RAW_VERSION#*@}
          pnpm nx release version $VERSION

      - name: Prepare packages for publishing
        run: pnpm build

      - name: Publish packages to npm
        run: pnpm nx release publish --registry https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
